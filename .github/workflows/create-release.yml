name: Create Release

# Create Release Artifacts on every push to `main`
on:
  push:
    branches:
      - 'main'

jobs:
  create-nomad-release:
    name: Create Nomad Release
    runs-on: [self-hosted, lob-runner, arm64, Linux]
    permissions:
      contents: read
      packages: write
      deployments: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          # Aggressive disk cleanup
          sudo apt-get clean
          sudo rm -rf /var/cache/apt/archives/*
          sudo rm -rf /tmp/*
          sudo rm -rf /home/ubuntu/go
          sudo rm -rf /var/log/*.log /var/log/*.gz
          
          sudo apt-get update
          sudo apt-get install -y make postgresql postgresql-contrib curl
          sudo systemctl start postgresql
          sudo -u postgres createdb test_db || true
          sudo -u postgres psql -c "CREATE USER test WITH PASSWORD 'test';" || true
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE test_db TO test;" || true
          
          # Install Go manually (actions/setup-go doesn't work well on self-hosted runners)
          curl -fsSL https://go.dev/dl/go1.21.5.linux-arm64.tar.gz | sudo tar -xzC /usr/local
          echo 'export PATH=$PATH:/usr/local/go/bin' >> ~/.bashrc
          export PATH=$PATH:/usr/local/go/bin
          
          # Set Go to use minimal cache and build in tmp
          export GOCACHE=/tmp/go-cache
          export GOMODCACHE=/tmp/go-mod-cache
          mkdir -p /tmp/go-cache /tmp/go-mod-cache
          
          # Install golangci-lint
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b /tmp v1.55.2
          sudo mv /tmp/golangci-lint /usr/local/bin/

      - name: Run database migrations
        run: |
          export PATH=$PATH:/usr/local/go/bin
          export GOCACHE=/tmp/go-cache
          export GOMODCACHE=/tmp/go-mod-cache
          export DATABASE_HOST=localhost
          export DATABASE_PORT=5432
          export DATABASE_USER=test
          export DATABASE_PASSWORD=test
          export DATABASE_NAME=test_db
          make db-migrate || echo "Migrations may already be applied, continuing..."

      - name: Run tests
        run: |
          export PATH=$PATH:/usr/local/go/bin
          export GOCACHE=/tmp/go-cache
          export GOMODCACHE=/tmp/go-mod-cache
          export GOPROXY=https://proxy.golang.org,direct
          export GOSUMDB=sum.golang.org
          export DATABASE_HOST=localhost
          export DATABASE_PORT=5432
          export DATABASE_USER=test
          export DATABASE_PASSWORD=test
          export DATABASE_NAME=test_db
          timeout 300 make test
          
          # Clean up after tests to save space
          sudo rm -rf /tmp/go-mod-cache/*

      - name: Run linting
        run: |
          export PATH=$PATH:/usr/local/go/bin
          export GOCACHE=/tmp/go-cache
          export GOMODCACHE=/tmp/go-mod-cache
          make lint

      - name: Build application
        run: |
          export PATH=$PATH:/usr/local/go/bin
          export GOCACHE=/tmp/go-cache
          export GOMODCACHE=/tmp/go-mod-cache
          make build

      - name: Create staging release artifact
        run: |
          mkdir -p deploy/staging
          cp build/zeus deploy/staging/
          cp zeus-staging.nomad.hcl deploy/staging/zeus.nomad.hcl
          cd deploy/staging
          tar -czf zeus-staging-release.tar.gz .
          echo "Staging release artifact created"

      - name: Upload staging release artifact
        uses: actions/upload-artifact@v4
        with:
          name: zeus-staging-release
          path: deploy/staging/zeus-staging-release.tar.gz
          retention-days: 30

  auto-promote:
    name: Auto Promote to Staging
    needs: create-nomad-release
    runs-on: [self-hosted, lob-runner, arm64, Linux]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nomad CLI
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install nomad

      - name: Download staging release artifact
        uses: actions/download-artifact@v4
        with:
          name: zeus-staging-release
          path: ./staging-release

      - name: Auto Promote to staging
        run: |
          cd staging-release
          tar -xzf zeus-staging-release.tar.gz
          
          # Deploy to staging
          nomad job run zeus.nomad.hcl
          
          # Verify deployment
          nomad job status zeus-staging
        env:
          NOMAD_ADDR: ${{ secrets.NOMAD_ADDR }}
          NOMAD_TOKEN: ${{ secrets.NOMAD_TOKEN }}