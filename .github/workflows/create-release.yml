name: Create Release

# Create Release Artifacts on every push to `main`
on:
  push:
    branches:
      - 'main'

jobs:
  create-nomad-release:
    name: Create Nomad Release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      deployments: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y make postgresql postgresql-contrib
          sudo systemctl start postgresql
          sudo -u postgres createdb test_db || true
          sudo -u postgres psql -c "DROP USER IF EXISTS test;" || true
          sudo -u postgres psql -c "CREATE USER test WITH PASSWORD 'test' CREATEDB CREATEROLE SUPERUSER;" || true
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE test_db TO test;" || true
          sudo -u postgres psql -c "ALTER DATABASE test_db OWNER TO test;" || true

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Download Go modules
        run: |
          export GOPROXY=https://proxy.golang.org,direct
          export GOSUMDB=sum.golang.org
          go mod download

      - name: Run database migrations
        run: |
          export DATABASE_HOST=localhost
          export DATABASE_PORT=5432
          export DATABASE_USER=test
          export DATABASE_PASSWORD=test
          export DATABASE_NAME=test_db
          echo "Running database migrations..."
          make db-migrate
          echo "Migrations completed successfully"

      - name: Run tests
        run: |
          export GOPROXY=https://proxy.golang.org,direct
          export GOSUMDB=sum.golang.org
          export DATABASE_HOST=localhost
          export DATABASE_PORT=5432
          export DATABASE_USER=test
          export DATABASE_PASSWORD=test
          export DATABASE_NAME=test_db
          timeout 300 make test

      - name: Build application
        run: |
          export GOOS=linux
          export GOARCH=amd64
          export CGO_ENABLED=1
          echo "---> Building: (linux, amd64)"
          go build -race -o build/service cmd/server/main.go && echo "Successful!"

      - name: Create staging release artifact
        run: |
          mkdir -p deploy/staging
          cp build/service deploy/staging/zeus
          cp zeus-staging.nomad.hcl deploy/staging/zeus.nomad.hcl
          cd deploy/staging
          tar -czf ../zeus-staging-release.tar.gz zeus zeus.nomad.hcl
          echo "Staging release artifact created"

      - name: Upload staging release artifact
        uses: actions/upload-artifact@v4
        with:
          name: zeus-staging-release
          path: zeus-staging-release.tar.gz
          retention-days: 30

  # Note: Auto-deployment removed for now. 
  # The staging artifact is created and uploaded above.
  # You can manually download and deploy it to your Nomad cluster.